# -*- coding: utf-8 -*-
"""AFEProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sEuxr9TZGyhXZBZ5VjLAQZ1HLW9MEEqo
"""

!pip install sklearn

from pandas.core.dtypes.inference import Number
from pandas.core.common import random_state
#AFE Project 3. Semester

from pandas import DataFrame
import pandas as pd

#read in the data, only use relevant coloumns
data = pd.read_csv("Gebäudeverzeichnis_edited.csv",on_bad_lines="skip", engine="python", delimiter=',',usecols=['GGDENR','GGDENAME','EGID','BauzonenSchweiz_ZonesabatirSuisse_2017 — ch_are_bauzonen.shp_CH_BEZ_D','GKODE','GKODN'])

#Formatting, putting in a DataFrame
df_gebaude = pd.DataFrame(data)
df_gebaude = df_gebaude.rename(columns={'BauzonenSchweiz_ZonesabatirSuisse_2017 — ch_are_bauzonen.shp_CH_BEZ_D': 'Bauzone'})

#Read and format local communities
gemeindeData =  pd.read_csv("GemeindeInfos.csv",on_bad_lines="skip", engine="python", delimiter=';')
df_gemeindeData = pd.DataFrame(gemeindeData)


#Merge GWR-Data and communities to one main list
df_gebaude = df_gebaude.merge(df_gemeindeData, left_on="GGDENR", right_on="GemeindeNr")
df_gebaude = df_gebaude.drop(["EGID","GGDENR","GGDENAME"], axis=1)
df_gebaude.head(5)
df_gebaude.count()

from sklearn.cluster import KMeans
import numpy as np
# Create a seperate list only x- and y-axis for kmeans algorithm and put into pandas Dataframe

df_coordinates = df_gebaude
df_coordinates = pd.DataFrame(df_coordinates)
df_coordinates = df_coordinates.drop(["Bauzone","GemeindeNr","Gemeinde","Bevolkerungsdichte","Beschaftigte"], axis=1)

df_coordinates = df_coordinates.dropna()

np_array = df_coordinates.to_numpy()

#was ist unser Regelwerk - wie definieren wir k?
k=10000
kmeans = KMeans(n_clusters=k, random_state=0).fit(np_array)

#Set the labels
labels = kmeans.labels_
centroids = kmeans.cluster_centers_


#Store centroids of x and y individually
centroids_x = centroids[:,0]
centroids_y = centroids[:,1]

new_list = []

for i in range(len(centroids_x)):
  number = np.round(centroids[i],2)
  new_list.append(number)

print(new_list)

df_coordinates.count()

Bauzonen_gesamt = df_gebaude["Bauzone"].value_counts()